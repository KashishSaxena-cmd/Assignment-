from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options

def findTotalArticlesByLanguages(languages):
    # Convert all input languages to lowercase and strip extra spaces for consistent comparison
    languages = [lang.strip().lower() for lang in languages]

    # Set up the WebDriver
    chrome_options = Options()
    chrome_options.add_argument("--headless")  # Run in headless mode
    service = Service()  # Replace with the path to your ChromeDriver
    driver = webdriver.Chrome(service=service, options=chrome_options)

    try:
        # Navigate to the webpage
        driver.get("https://meta.wikimedia.org/wiki/List_of_Wikipedias/Table")
        
        # Locate all tables with class "sortable jquery-tablesorter"
        tables = driver.find_elements(By.CLASS_NAME, "sortable.jquery-tablesorter")

        # Initialize total articles counter
        total_articles = 0

        # Iterate through all the tables
        for table in tables:
            # Get all rows in the current table
            rows = table.find_elements(By.XPATH, ".//tr")

            # Iterate through the rows
            for row in rows:
                # Get all columns in the row
                columns = row.find_elements(By.TAG_NAME, "td")
                if len(columns) >= 5:  # Ensure the row has enough columns
                    language = columns[1].text.strip().lower()  # Extract the "Language" column and convert to lowercase
                    
                    try:
                        # Extract the hyperlink in the "Articles" column (5th column)
                        article_link = columns[4].find_element(By.TAG_NAME, "a")
                        
                        # Extract the number from the <b> tag inside the <a> tag
                        articles_text = article_link.find_element(By.TAG_NAME, "b").text.replace(",", "").strip()

                        # Print extracted language and articles for debugging
                        print(f"Found language: {language}, Articles: {articles_text}")

                        # Ensure the text is a valid number before adding to the total
                        if articles_text.isdigit():
                            articles_count = int(articles_text)

                            # Check if the language matches any in the provided list (case-insensitive)
                            if language in languages:
                                total_articles += articles_count

                    except (ValueError, IndexError, AttributeError):  # Handle cases where there's no valid link or number
                        continue  # Skip this row if an error occurs

        return total_articles

    finally:
        # Quit the WebDriver
        driver.quit()

# Example usage
languages = ["English", "German", "French"]
total = findTotalArticlesByLanguages(languages)
print(f"Total articles for {languages}: {total}")
